/*
    This file is part of Qstit - http://subtitles.nova-cinema.org
    Feedback, comments and questions are welcome: subtitles@nova-cinema.org
   ════════════════════════════════════════════════════════════════════════════════════
    Qstit is developed by Nova Cinema, Brussels - http://www.nova-cinema.org
    Conception: Laurent Tenzer
    Programming: Georges Piedboeuf-Boen - georges.pi.bo@gmail.com
    Icons credit: Nova & Axialis Team - http://www.axialis.com/free/icons
   ════════════════════════════════════════════════════════════════════════════════════
    Qstit is a free software: you can redistribute it and/or modify it under the terms
    of the GNU General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version.
    If you do, we'd like to hear about it.

    Qstit is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
    PARTICULAR PURPOSE. See the GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along with Qstit.
    If not, see http://www.gnu.org/licenses
   ════════════════════════════════════════════════════════════════════════════════════
*/

#ifndef H_WINMAIN
#define H_WINMAIN

#include <iostream>
#include <fstream>

#include <QtGui>
#include <QApplication>
#include <QDir>
#include <QFile>
#include <QString>
#include <QTableWidget>
#include <QHeaderView>
#include <QAbstractItemView>
#include <QModelIndex>
#include <QVBoxLayout>
#include <QPushButton>
#include <QKeyEvent>
#include <QEvent>
#include <QTime>
#include <QTimer>

#include "QSTit_fadShow.h"

class barSkin;
class butBubbC;
class butDspi;
class butSpin;
class butToolC;
class butToolX;
class diaColoSkin;
class diaConfSkin;
class diaFileSkin;
class diaFontSkin;
class diaGridC;
class diaGridSkin;
class diaExitSkin;
class diaSkin;
class grpSkin;
class menuSkin;
class mesSkin;
class rowSkin;
class diaInfoSkin;
class diaHelpSkin;

class winMain : public QWidget
{
    Q_OBJECT
    public:
        winMain();
    private:
        struct objMinMax
        {
            int     mini,maxi,val0,valu;
            double  dmin,dmax,dstp,dbas,dval;
        } objRowsNumb,objRowsWidt,objRowsHeig,objRowsSpac,objRowsRota,objRowsOutl,objJumpBase;
        struct objScreens
        {
            int     widt,heig,midW,midH,basW,basH;
        } objWind;
        struct objRows
        {
            bool    show;
            QString text;
            QFont   font;
            QColor  colB,colF,colO;
            int     x,y,widt,heig,spac,savH,savS,hori,vert,outl;
            double  rota;
        } objRow0,objRow1,objRow2,objRow3,objRow4;
    private:
        bool        g1rst;
        int         gAcce;
        bool        gAuto;
        bool        gBackDial;
        QString     gClokStyl;
        bool        gColoDial;
        QString     gColoGray;
        int         gConf;
        bool        gConfDial;
        QString     gConfFile;
        int         gEditTextColu[99];
        int         gEditTextLine[99];
        QString     gEditTextNewx[99];
        QString     gEditTextOldx[99];
        int         gEditTextRows[99];
        QColor      gErroBack;
        QColor      gErroColo;
        bool        gExitDial;
        QString     gExplDisa;
        QString     gExplStyl;
        QString     gFile;
        bool        gFileDial;
        bool        gFileEnco;
        QString     gFileErro;
        bool        gInfoDial;
        int         gFileMaxiChar[9];
        int         gFileMaxiColo[9];
        int         gFileMaxiColu[4];
        int         gFileMaxiGrid[9];
        int         gFileMaxiLeng[9];
        int         gFileMaxiLine[9];
        int         gFileMaxiRows[9];
        bool        gFontDial;
        QString     gGriCStyl;
        QString     gGridBack;
        QString     gGridColo;
        bool        gGridColoDark;
        int         gGridCols;
        bool        gGridDial;
        bool        gGridEdit;
        bool        gGridEditSave;
        QFont       gGridFont;
        int         gGridMark;
        int         gGridNext;
        int         gGridModi;
        int         gGridRowsHeig;
        bool        gGridSave;
        QString     gGridSele;
        bool        gGridShow;
        bool        gHelpDial;
        QString     gHideStyl;
        QString     gHome;
        bool        gInit;
        int         gJump;
        double      gJumpBase;
        int         gLang;
        QStringList gLangCode;
        QStringList gLangText;
        bool        gLogo;
        bool        gManu;
        QString     gOutlColo;
        bool        gOutlDial;
        bool        gPlay;
        int         gPuls;
        QString     gPulsStyl;
        int         gShed;
        int         gRows;
        QString     gRowsBack;
        QFrame*     fraRowsCent;
        QString     gRowsColo;
        QFont       gRowsFont;
        int         gRowsHcen;
        int         gRowsMaxi;
        int         gRowsVcen;
        bool        gSecoText;
        bool        gSecoItal;
        bool        gSett;
        bool        gSettFile;
        bool        gSettGene;
        int         gSettHeig;
        int         gSettLefx;
        bool        gSettShow;
        int         gSettTopy;
        int         gSettWidt;
        bool        gShedStat;
        bool        gShow;
        bool        gShowButt;
        bool        gSrtx;
        QString     gSrtxStop;
        QString     gSystFontFami;
        QString     gTestStyl;
        bool        gTest;
        QString     gTestFramStyl;
        QString     gTimeStyl;
        QString     gVers;
        bool        gWarn;
        QString     gWindBack;
        bool        gWindDial;
        bool        gWork;
        QFile       oConf;
        QFile       oFile;
        QFile       oFlog;
        QFile       oHelp;
        QFile       oLang;
        QMainWindow *winFram;
        QWidget     *winWind;
    private:
        void        fApplInit();
        void        fAutoAcceShow();
        void        fAutoGridShow();
        void        fAutoInit();
        void        fAutoJumpBack();
        void        fAutoPaus();
        void        fAutoStarInit();
        QTime       fAutoTimeConv(QString);
        void        fAutoTimeInit();
        void        fClearAll(bool);
        void        fConfConf(QString,QString);
        void        fConfDial();
        void        fConfRead();
        void        fConfSprd();
        void        fConfWrit();
        QString     fConfWritLine(QString,QString);
        QString     fConfWritRowx(int);
        void        fFileConf();
        void        fFileEncoding(QString);
        QString     fFileLineForm(QString);
        void        fFileLogx();
        void        fFileRead();
        void        fFileReadSrtx();
        int         fFileSize(QString);
        bool        fFileSrtxVeriBlan(int,QString,int);
        bool        fFileSrtxVeriHour(int,QString,int);
        int         fFileSrtxVeriNumb(int,QString,int);
        bool        fFileSrtxVeriText(int,QString,int);
        bool        fFileTextMaxi(int,int,int,int,int,int);
        void        fFileWrit(QString);
        void        fFileWritSrtx(QString);
        bool        fFlogOpen();
        void        fGridColo();
        void        fGridCrea();
        void        fGridEditDisa();
        void        fGridEditEnab();
        void        fGridEditMemo(int,int,QString);
        void        fGridFocus();
        void        fGridFontSize();
        void        fGridInit();
        void        fGridInitCols();
        void        fGridInitRows();
        void        fGridItemSetx(QString,int,int);
        void        fGridMarkRows(int);
        void        fGridModi();
        void        fGridNext();
        void        fGridRows(int);
        void        fGridSaveIcon();
        void        fGridShow(bool);
        QString     fGridTextClean(QString);
        void        fGridTitle();
        void        fGridZero();
        QString     fHelpFileRead();
        QString     fL(QString);
        void        fLangFileRead();
        void        fManuInit();
        void        fMenuAdapt(int);
        void        fMenuClear();
        void        fMenuCrea();
        void        fRowsAdapt();
        void        fRowsBackDial();
        void        fRowsBase(int,int);
        void        fRowsChck();
        void        fRowsClear();
        void        fRowsColoDial();
        void        fRowsCrea();
        void        fRowsFontChan();
        void        fRowsFontDial();
        void        fRowsFram();
        void        fRowsFramCent();
        void        fRowsFramHeig();
        void        fRowsFramInit();
        void        fRowsFramPosi();
        void        fRowsHeigCalc();
        void        fRowsHoriCent();
        void        fRowsHoriLeft();
        void        fRowsHoriRigh();
        void        fRowsInit();
        void        fRowsShow(int);
        void        fRowsLocDFast();
        void        fRowsLocLFast();
        void        fRowsLocRFast();
        void        fRowsLocUFast();
        void        fRowsNumb();
        void        fRowsNumbAdap();
        void        fRowsVertBott();
        void        fRowsVertCent();
        void        fRowsVertTopy();
        void        fRowsTextDraw(int);
        void        fRowsTextForm();
        void        fRowsWidtCalc();
        void        fSettAdapt();
        void        fSettBase();
        void        fSettCrea();
        void        fSettCreaSave();
        void        fSettCreaShed();
        void        fSettEnab();
        void        fTestCard(bool);
        void        fTestShow();
        void        fWindClear();
        void        fWindCrea();
        void        fWindInit();
        void        fWindLogo();
        void        fWindLogoFade();
        void        fWindLogoHide();
        void        fWindStyle();
    private slots:
        void        fAutoAcce();
        void        fAutoBack();
        void        fAutoClok();
        void        fAutoDece();
        void        fAutoJump();
        void        fAutoStar();
        void        fBackDialClos();
        void        fButtNext();
        void        fButtPrev();
        void        fClearGrid();
        void        fColoDialClos();
        void        fConfDialRepo();
        void        fConfDialClos();
        void        fHelpDial();
        void        fHelpDialClos();
        void        fFileDial();
        void        fFileDialCanc();
        void        fFileDialRepo(QString);
        void        fFileInfoDial();
        void        fFileInfoClos();
        void        fFileInfoGoto(int,int);
        void        fFontDialClos();
        void        fGridChan(int,int,int,int);
        void        fGridClic(int,int);
        void        fGridColoTogg();
        void        fGridEdit(int,int);
        void        fGridEditButt();
        void        fGridEditCanc();
        void        fGridEditSave();
        void        fGridFind();
        void        fGridFontClos();
        void        fGridFontDial();
        void        fGridFontGet(QFont);
        void        fGridGoto();
        void        fGridLink();
        void        fGridSave();
        void        fGridUndo();
        void        fJumpBase(double);
        void        fLAll();
        void        fMenuClok();
        void        fOutlDialClos();
        void        fRowsBac1();
        void        fRowsBac2();
        void        fRowsBac3();
        void        fRowsBac4();
        void        fRowsBack();
        void        fRowsBackGet(QColor);
        void        fRowsCol1();
        void        fRowsCol2();
        void        fRowsCol3();
        void        fRowsCol4();
        void        fRowsColo();
        void        fRowsColoGet(QColor);
        void        fRowsDimH(int);
        void        fRowsDimV(int);
        void        fRowsFon1();
        void        fRowsFon2();
        void        fRowsFon3();
        void        fRowsFon4();
        void        fRowsFont();
        void        fRowsFontGet(QFont);
        void        fRowsHoriCen0();
        void        fRowsHoriCen1();
        void        fRowsHoriCen2();
        void        fRowsHoriCen3();
        void        fRowsHoriCen4();
        void        fRowsHoriLef0();
        void        fRowsHoriLef1();
        void        fRowsHoriLef2();
        void        fRowsHoriLef3();
        void        fRowsHoriLef4();
        void        fRowsHoriRig0();
        void        fRowsHoriRig1();
        void        fRowsHoriRig2();
        void        fRowsHoriRig3();
        void        fRowsHoriRig4();
        void        fRowsItal(int);
        void        fRowsLocC();
        void        fRowsLocD();
        void        fRowsLocL();
        void        fRowsLocR();
        void        fRowsLocU();
        void        fRowsOut1();
        void        fRowsOut2();
        void        fRowsOut3();
        void        fRowsOut4();
        void        fRowsOutl();
        void        fRowsOutlDial();
        void        fRowsOutlGet(QColor);
        void        fRowsOutlThik(int);
        void        fRowsRota(double);
        void        fRowsSeco(int);
        void        fRowsShowSlot();
        void        fRowsSpac(int);
        void        fRowsStat();
        void        fRowsStatMove();
        void        fRowsVertBot0();
        void        fRowsVertBot1();
        void        fRowsVertBot2();
        void        fRowsVertBot3();
        void        fRowsVertBot4();
        void        fRowsVertCen0();
        void        fRowsVertCen1();
        void        fRowsVertCen2();
        void        fRowsVertCen3();
        void        fRowsVertCen4();
        void        fRowsVertTop0();
        void        fRowsVertTop1();
        void        fRowsVertTop2();
        void        fRowsVertTop3();
        void        fRowsVertTop4();
        void        fSettBaseDial();
        void        fSettGeneDial();
        void        fSettFileDial();
        void        fSettClos();
        void        fSettSaveFile();
        void        fSettSaveGene();
        void        fSettShow();
        void        fShedHeig(int);
        void        fShedNumb();
        void        fShedOutl(int);
        void        fShedRota(double);
        void        fShedSpac(int);
        void        fShedStatShow();
        void        fTestTogg();
        void        fWindBack();
        void        fWindBackDial();
        void        fWindBackClos();
        void        fWindBackGet(QColor);
        void        fWindExit();
        void        fWindExitCanc();
        void        fWindExitClos();
        void        fWindExitDial();
        void        fWindTask();
    private:
        QPushButton*    butConfOkok;
        QPushButton*    butEditCanc;
        QPushButton*    butEditSave;
        butToolC*       butExit;
        QPushButton*    butExitCanc;
        QPushButton*    butExitExit;
        butToolC*       butFile;
        QPushButton*    butFont;
        butToolC*       butGridClea;
        butToolC*       butGridEdit;
        butToolC*       butGridFind;
        QPushButton*    butGridFont;
        butToolC*       butGridGoto;
        butToolC*       butGridInfo;
        butToolC*       butGridLink;
        butToolC*       butGridSave;
        butToolC*       butGridUndo;
        butToolC*       butHelp;
        butToolX*       butHoriCent;
        butToolX*       butHoriLeft;
        butToolX*       butHoriRigh;
        butToolX*       butLocaCent;
        butToolX*       butLocaDown;
        butToolX*       butLocaLeft;
        butToolX*       butLocaRigh;
        butToolX*       butLocaUpup;
        butToolC*       butProjAcce;
        butToolC*       butProjBack;
        butToolC*       butProjDece;
        butToolC*       butProjDown;
        butToolC*       butProjJump;
        butToolC*       butProjPlay;
        butToolC*       butProjUpup;
        butToolC*       butRoll;
        QToolButton*    butRowsCent;
        QPushButton*    butRowsOutl;
        butToolC*       butSett;
        QPushButton*    butSettLoaB;
        QPushButton*    butSettLoaF;
        QPushButton*    butSettLoaG;
        QPushButton*    butSettSavF;
        QPushButton*    butSettSavG;
        QPushButton*    butShedBac0;
        QPushButton*    butShedBac1;
        QPushButton*    butShedBac2;
        QPushButton*    butShedBac3;
        QPushButton*    butShedBac4;
        QPushButton*    butShedFon0;
        QPushButton*    butShedFon1;
        QPushButton*    butShedFon2;
        QPushButton*    butShedFon3;
        QPushButton*    butShedFon4;
        QPushButton*    butShedFor0;
        QPushButton*    butShedFor1;
        QPushButton*    butShedFor2;
        QPushButton*    butShedFor3;
        QPushButton*    butShedFor4;
        butToolX*       butShedHoC0;
        butToolX*       butShedHoC1;
        butToolX*       butShedHoC2;
        butToolX*       butShedHoC3;
        butToolX*       butShedHoC4;
        butToolX*       butShedHoL0;
        butToolX*       butShedHoL1;
        butToolX*       butShedHoL2;
        butToolX*       butShedHoL3;
        butToolX*       butShedHoL4;
        butToolX*       butShedHoR0;
        butToolX*       butShedHoR1;
        butToolX*       butShedHoR2;
        butToolX*       butShedHoR3;
        butToolX*       butShedHoR4;
        QPushButton*    butShedOut0;
        QPushButton*    butShedOut1;
        QPushButton*    butShedOut2;
        QPushButton*    butShedOut3;
        QPushButton*    butShedOut4;
        butToolX*       butShedVeB0;
        butToolX*       butShedVeB1;
        butToolX*       butShedVeB2;
        butToolX*       butShedVeB3;
        butToolX*       butShedVeB4;
        butToolX*       butShedVeC0;
        butToolX*       butShedVeC1;
        butToolX*       butShedVeC2;
        butToolX*       butShedVeC3;
        butToolX*       butShedVeC4;
        butToolX*       butShedVeT0;
        butToolX*       butShedVeT1;
        butToolX*       butShedVeT2;
        butToolX*       butShedVeT3;
        butToolX*       butShedVeT4;
        QPushButton*    butTestCard;
        QPushButton*    butTestGrid;
        QPushButton*    butTestMenu;
        QPushButton*    butTestRows;
        QPushButton*    butTextBack;
        QPushButton*    butTextColo;
        butToolX*       butVertBott;
        butToolX*       butVertCent;
        butToolX*       butVertTopy;
        QPushButton*    butWindBack;
        QCheckBox*      chkSecoItal;
        QCheckBox*      chkSecoText;
        diaColoSkin*    diaColoWind;
        diaColoSkin*    diaColoBack;
        diaColoSkin*    diaColoText;
        diaColoSkin*    diaColoOutl;
        diaConfSkin*    diaConf;
        QDialog*        diaEdit;
        diaExitSkin*    diaExit;
        diaFileSkin*    diaFile;
        diaFontSkin*    diaFont;
        diaGridSkin*    diaGrid;
        diaHelpSkin*    diaHelp;
        diaInfoSkin*    diaInfo;
        diaSkin*        diaSett;
        menuSkin*       fraMenu;
        rowSkin*        fraRows;
        QFrame*         fraShedHid1;
        QFrame*         fraShedHid2;
        QFrame*         fraShedHid3;
        QFrame*         fraShedHid4;
        QFrame*         fraTestRows;
        QTableWidget*   griInfo;
        diaGridC*       griText;
        grpSkin*        grpTextAliH;
        grpSkin*        grpTextAliV;
        QLabel*         labClok;
        QLabel*         labGridCol3;
        QLabel*         labGridCol4;
        QLabel*         labGridCol5;
        QLabel*         labGridCol6;
        QLabel*         labGridColo;
        QLabel*         labGridFont;
        QLabel*         labGridLoca;
        QLabel*         labGridSize;
        QLabel*         labJump;
        QLabel*         labJumpBase;
        QLabel*         labLogo;
        QLabel*         labMenuLoca;
        QLabel*         labMenuSize;
        QLabel*         labPuls;
        QLabel*         labRowsCent;
        QLabel*         labRowsDimH;
        QLabel*         labRowsDimV;
        QLabel*         labRowsLoca;
        QLabel*         labRowsOutl;
        QLabel*         labRowsSize;
        QLabel*         labScreSize;
        QLabel*         labSettLin1;
        QLabel*         labSettLin2;
        QLabel*         labSettLin4;
        QLabel*         labShedBack;
        QLabel*         labShedDesc;
        QLabel*         labShedText;
        QLabel*         labShedHeig;
        QLabel*         labShedHori;
        QLabel*         labShedLin0;
        QLabel*         labShedLin1;
        QLabel*         labShedLin2;
        QLabel*         labShedLin3;
        QLabel*         labShedLin4;
        QLabel*         labShedOutl;
        QLabel*         labShedPosX;
        QLabel*         labShedPosY;
        QLabel*         labShedRota;
        QLabel*         labShedShow;
        QLabel*         labShedSpac;
        QLabel*         labShedTit0;
        QLabel*         labShedTit1;
        QLabel*         labShedTit2;
        QLabel*         labShedTit3;
        QLabel*         labShedTit4;
        QLabel*         labShedVert;
        QLabel*         labShedWidt;
        QLabel*         labTaskShow;
        QLabel*         labTestHori[99];
        QLabel*         labTestVert[99];
        QLabel*         labTextAliH;
        QLabel*         labTextAliV;
        QLabel*         labTextFont;
        QLabel*         labTime;
        QLabel*         labWindBack;
        QLabel*         labWorkLang;
        QRadioButton*   radConfCurr;
        QRadioButton*   radConfDefa;
        QRadioButton*   radConfFile;
        QRadioButton*   radConfGene;
        QRadioButton*   radExitSavF;
        QRadioButton*   radExitSavN;
        QRadioButton*   radExitSavG;
        QRadioButton*   radGridDark;
        QRadioButton*   radGridWhit;
        QRadioButton*   radLangEngl;
        QRadioButton*   radLangOthe;
        QRadioButton*   radShedStat;
        QRadioButton*   radShedSho1;
        QRadioButton*   radShedSho2;
        QRadioButton*   radShedSho3;
        QRadioButton*   radShedSho4;
        QRadioButton*   radTaskHide;
        QRadioButton*   radTaskShow;
        butDspi*        spiJumpBase;
        butSpin*        spiRowsDimH;
        butSpin*        spiRowsDimV;
        butSpin*        spiRowsOutl;
        butDspi*        spiRowsRota;
        butSpin*        spiRowsSpac;
        butSpin*        spiShedHei0;
        butSpin*        spiShedHei1;
        butSpin*        spiShedHei2;
        butSpin*        spiShedHei3;
        butSpin*        spiShedHei4;
        butSpin*        spiShedOut0;
        butSpin*        spiShedOut1;
        butSpin*        spiShedOut2;
        butSpin*        spiShedOut3;
        butSpin*        spiShedOut4;
        butDspi*        spiShedRot0;
        butDspi*        spiShedRot1;
        butDspi*        spiShedRot2;
        butDspi*        spiShedRot3;
        butDspi*        spiShedRot4;
        butSpin*        spiShedSpa0;
        butSpin*        spiShedSpa1;
        butSpin*        spiShedSpa2;
        butSpin*        spiShedSpa3;
        QWidget*        tabGene;
        QWidget*        tabRows;
        QWidget*        tabSave;
        QTabWidget*     tabSett;
        QWidget*        tabShed;
        QTextEdit*      texHelp;
        QLabel*         texJump;
        QLabel*         texPuls;
        QLabel*         texRow1;
        QLabel*         texRow2;
        QLabel*         texRow3;
        QLabel*         texRow4;
        QLabel*         texRowsBack;
        QLabel*         texRowsDime;
        QLabel*         texRowsFram;
        QLabel*         texRowsHeim;
        QLabel*         texRowsHeiM;
        QLabel*         texRowsLoca;
        QLabel*         texRowsRota;
        QLabel*         texRowsSpac;
        QLabel*         texRowsText;
        QLabel*         texRowsWidM;
        QTime           timAuto;
        QTime           timStar;
        QTime           timStop;
        QTime           timSystPuls;
        QTimer*         tmrClok;
        QTimer*         tmrAuto;
    private:
        QPointer<FaderWidget> faderWidget;
    protected:
        virtual void keyPressEvent(QKeyEvent *qe);
};

#endif
